package com.master.business.controller.user;


import com.master.business.domain.model.user.UserRole;
import com.master.business.service.user.IUserRoleService;
import com.master.core.annotation.SessionParam;
import com.master.core.framework.db.PagerBean;
import com.master.core.framework.web.AuthUser;
import com.master.core.framework.web.BaseController;
import com.master.core.framework.web.ResultData;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;



  
/**
  * t_uesr_role 用户角色控制器
  * @version v1.0.0
  * @since jdk1.8+
  * @author 123
  */
@Controller
@RequestMapping("/userrole")
public class UserRoleController extends BaseController {
	private Logger log = LoggerFactory.getLogger(UserRoleController.class);

	@Autowired
	private IUserRoleService userroleService;	
	
	/**
	 * 获取
	 * @param userid 
     * @param authuser 操作用户信息
	 * @param model
	 */
	@RequestMapping(value="/get", method={ RequestMethod.GET, RequestMethod.POST })
	public void get(@SessionParam("authuser") AuthUser authuser, String userid, Model model){
		log.debug("###开始查询， userid=[{}].", userid);
		try {
			//These code is generated by machine, if you want to modify the code, suggest you to remove this line
			ResultData data = userroleService.get(userid, authuser);
			collect(data, model);
		} catch (Exception e) {
			collect(e, model);
		}
	}
	
	/**
	 * 查询
	 * @param userrole 对象
	 * @param authuser 操作用户信息
	 * @param model
	 */
	@RequestMapping(value="/find", method={ RequestMethod.POST })
	public void find(@SessionParam("authuser") AuthUser authuser, UserRole userrole, Model model){
		log.debug("###开始根据条件{}查询", userrole);
		try {
			//These code is generated by machine, if you want to modify the code, suggest you to remove this line
			ResultData data = userroleService.find(userrole, authuser);
			collect(data, model);
		} catch (Exception e) {
			collect(e, model);
		}
	}
	
	
	/**
	 * 分页查询
	 * @param authuser 操作用户信息
	 * @param page 分页参数
	 * @param model
	 */
	@RequestMapping(value="/find-by-page", method={ RequestMethod.POST })
	public void findPager(@SessionParam("authuser") AuthUser authuser,  UserRole userrole,PagerBean page,Model model){
		log.debug("###开始根据条件{}分页查询", userrole);
		ResultData resData = ResultData.init();
		try {
			//These code is generated by machine, if you want to modify the code, suggest you to remove this line
			resData = userroleService.findPager(userrole,page,authuser);
			collect(resData, model);
		} catch (Exception e) {
			collect(e, model);
		}
	}
	
	/**
	 * 添加
	 * @param userrole 对象
	 * @param authuser 操作用户信息
	 * @param model
	 */
	@RequestMapping(value="/add", method={ RequestMethod.POST })
	public void add(@SessionParam("authuser") AuthUser authuser, UserRole userrole, Model model){
		log.debug("###开始查找添加， [{}]", userrole);
		try {
			//These code is generated by machine, if you want to modify the code, suggest you to remove this line
			ResultData data = userroleService.add(userrole, authuser);
			collect(data, model);
		} catch (Exception e) {
			collect(e, model);
		}
	}
	
	/**
	 * 更新
	 * @param userrole 对象
	 * @param authuser 操作用户信息
	 * @param model
	 */
	@RequestMapping(value="/update", method={ RequestMethod.POST })
	public void update(@SessionParam("authuser") AuthUser authuser, UserRole userrole, Model model){
		log.debug("###开始修改， [{}]", userrole);
		try {
			//These code is generated by machine, if you want to modify the code, suggest you to remove this line
			ResultData data = userroleService.update(userrole, authuser);
			collect(data, model);
		} catch (Exception e) {
			collect(e, model);
		}
	}
	
	/**
	 * 删除
	 * @param userid 
	 * @param authuser 操作用户信息
	 * @param model
	 */
	@RequestMapping(value="/delete", method={ RequestMethod.POST })
	public void delete(@SessionParam("authuser") AuthUser authuser, String userid,  Model model){
		log.debug("###开始删除对象，userid={}.", userid);
		try {
			//These code is generated by machine, if you want to modify the code, suggest you to remove this line
			ResultData data = userroleService.delete(userid, authuser);
			collect(data, model);
		} catch (Exception e) {
			collect(e, model);
		}
	}
}